'->' Means not a task yet in the backlog
'=' Done/Waiting to be reviewed
'!' On Team Tasks/Being worked on
'?' Not sure if it should be implemented or not
[{Project Type} {ID Number}]



[Backend]

Tokens
    -> [PROJECT #BE001] Generate the Role-Based Token
    -> [PROJECT #BE002] Attach the Token to the user
    -> [PROJECT #BE003] Create middleware to check the token when entering a page
    -> [PROJECT #BE004] Apply middleware to protect the routes



[Scheduler Side]

Role-Access Backend
    -> Initial Login Page where user has to login to have access to any of the pages.
        -> Once logged in, the user should be able to keep access for about 3 hours. If user resfreshes any of the pages, the token will be refreshed to 3 hours again
    -> When connecting to any of these pages, there should be a check of token. The token should check whether or not the user trying to access this page has a valid token (scheduler)



Navigation Bar
    1. Add Role-Based Access (Meaning profiles for caregivers and schedulers)
        -> What the caregivers can do (See in their page)
            -> Request PTO
            -> Request Change in Schedule/Availability
            -> See their current schedules and availability
            -> See their 'classes'
            -> Update their 'classes' per request to scheduler
    2. Add the logo
        -> The logo should when clicked, redirect back to the home page



Find Caregiver Page
    1. Date Calendar
        = [PROJECT FC#002] Modify the calendar date to be bigger (Min Size and Max Size)
        ! [PROJECT FC#009] When re-sizing the date calendar, if zoomed in, can lead to 2-3 of the last days to be blocked/unavailable to be selected
            - Max-Min 7 items for the calendar date, so no matter what, there will always be 7 items for the calendar date.
        = [PROJECT #FC003] One column of filter items
        -> On select a day, shows that day
        -> Unselect, shows everything?

    2. Filter Side-Bar
        = [PROJECT FC#005] Should be sticky
        = [PROJECT #FC001] Filter Options should be scrollable 
        = [PROJECT #FC004] Filter Text and Buttons should be bigger in text size
        ! [PROJECT #FC006] The filter options should have a clear button to reset all the filters
        ! [PROJECT #FC007] Filter Options should have more sections based on it, so level 1,2,3 and Transportation etcetc.
            - Alphabetical Order
        = [PROJECT #FC003] Filter options should be one Column
        ! [PROJECT #FC008] Adding search bar to search for certain filters
        -> Filter options should be dynamic sizing



Availability Page
    = [PROJECT #AP001] Create the availability page

    1. Availability Tool
        -> Schedulers should be able to add/remove an an available time based on a specific time
        -> if time is already scheduled or blocked, then cancel operation and report that there's a conflict



Profile Page
    ! [PROJECT #PP001] Create a profile page

    1. Profile Page Features
        -> Can Modify email/username
        -> Can Modify Password, uses verification through email



Login Page
    1. 
        ! [PROJECT #LP001] Create the login page
        -> Login page should have a form for the user to login
        -> Login page should have a forgot password (maybe)
        -> 

    1. Login so, if user does not have token, they aren't able to login
        -> Token should be 3 hours long (If user already logged in and goes into the website, refreshes the token to 3 hours again)



Home Page
    1. Add the notifications



Load Data Page
    1. Load Data Features
        ! [PROJECT #LD001] Create the functionality of loading a CSV file for the Caregiver Schedules
        ! [PROJECT #LD002] Create the functionality of loading a CSV file for the Classes



Random/Not Assigned to Page yet
    1. Add Role-Based Access (Meaning profiles for caregivers and schedulers)
        -> What the caregivers can do (See in their page)
            -> Request PTO
            -> Request Change in Schedule/Availability
            -> See their current schedules and availability
            -> See their 'classes'
            -> Update their 'classes' per request to scheduler



[Database]
    = [PROJECT #DB001] Create the SQL Database for remote access
    = [PROJECT #DB002] Create the schema
    = [PROJECT #DB003] Create the table to store the username, password, and role
    = [PROJECT #DB004] Store data into the table
    -> Maybe pre-hash the passwords in the database?


DYNAMIC NOTES/UPDATES TO BEWARE
    1. Classes are going to be dynamic based on the CSV File



THINGS THAT SHOULD NOT BE ALLOWED
    1. Schedulers should not be able to directly modify with classes
        -> Reason for this is that it should all be managed by the CSV file
